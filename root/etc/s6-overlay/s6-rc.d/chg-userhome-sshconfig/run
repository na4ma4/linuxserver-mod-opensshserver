#!/usr/bin/with-contenv bash
# shellcheck shell=bash

USER_NAME=${USER_NAME:-linuxserver.io}

if [[ ! -z ${USER_HOME} ]]; then
    if [[ ! -d "${USER_HOME}/.ssh" ]]; then
        mkdir --mode=0700 --parents "${USER_HOME}/.ssh"
    fi

    if [[ ! -f "${USER_HOME}/.ssh/authorized_keys" ]]; then
        if [[ -f "/config/.ssh/authorized_keys" ]]; then
            echo "[chg-userhome-sshconfig] moving authorized_keys to \"${USER_HOME}/.ssh/authorized_keys\""
        

            mv "/config/.ssh/authorized_keys" "${USER_HOME}/.ssh/authorized_keys"
            chmod 0600 "${USER_HOME}/.ssh/authorized_keys"
        fi
    else
        ## authorized keys exists, make sure keys are added if missing.
        if [[ -f "/config/.ssh/authorized_keys" ]]; then
            echo "[chg-userhome-sshconfig] combining existing authorized_keys with \"${USER_HOME}/.ssh/authorized_keys\""
            TMP_FILE="$(mktemp)"
            awk 1 "/config/.ssh/authorized_keys" "${USER_HOME}/.ssh/authorized_keys" | sort -u | tee "${TMP_FILE}" >/dev/null
            cat "${TMP_FILE}" | tee "${USER_HOME}/.ssh/authorized_keys"
            chmod 0600 "${USER_HOME}/.ssh/authorized_keys"
            rm -f "${TMP_FILE}" "/config/.ssh/authorized_keys"
        fi
    fi

    lsiown -R "${USER_NAME}:${USER_NAME}" "${USER_HOME}"
fi
